name: Run Data Sync

on:
  workflow_dispatch:
  schedule:
    - cron: '20 9/10 * * *'
  push:
    branches:
      - master
    paths:
      - run_page/nike_sync.py
      - run_page/nike_to_strava_sync.py
      - run_page/strava_sync.py
      - run_page/gen_svg.py
      - run_page/garmin_sync.py
      - run_page/coros_sync.py
      - run_page/keep_sync.py
      - run_page/gpx_sync.py
      - run_page/tcx_sync.py
      - run_page/garmin_to_strava_sync.py
      - run_page/keep_to_strava_sync.py
      - requirements.txt

env:
  # please change to your own config.
  RUN_TYPE: garmin_sync_cn_global # support strava/nike/garmin/coros/garmin_cn/garmin_sync_cn_global/keep/only_gpx/only_fit/nike_to_strava/strava_to_garmin/strava_to_garmin_cn/garmin_to_strava/garmin_to_strava_cn/codoon, Please change the 'pass' it to your own
  ATHLETE: BossMa
  TITLE: Workouts
  MIN_GRID_DISTANCE: 1 # change min distance here
  TITLE_GRID: Over 10km Workouts # also here
  GITHUB_NAME: qdbossma  # change to yours
  GITHUB_EMAIL: 13335099177@qq.com # change to yours

  # IGNORE_BEFORE_SAVING: True # if you want to ignore some data before saving, set this to True
  IGNORE_START_END_RANGE: 0 # Unit meter
  SAVE_DATA_IN_GITHUB_CACHE: false # if you deploy in the vercal, check the README
  DATA_CACHE_PREFIX: 'track_data'

jobs:
  sync:
    name: Sync
    runs-on: ubuntu-latest
    outputs:
      SAVE_DATA_IN_GITHUB_CACHE: ${{ steps.set_output.outputs.SAVE_DATA_IN_GITHUB_CACHE }}
      DATA_CACHE_PREFIX: ${{ steps.set_output.outputs.DATA_CACHE_PREFIX }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: pip
          cache-dependency-path: 'requirements.txt'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Cache Data Files
        if: env.SAVE_DATA_IN_GITHUB_CACHE == 'true'
        uses: actions/cache@v4
        with:
          path: |
            activities
            assets
            GPX_OUT
            TCX_OUT
            FIT_OUT
            Workouts
            run_page/data.db
            src/static/activities.json
            imported.json
          key: ${{ env.DATA_CACHE_PREFIX }}-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ${{ env.DATA_CACHE_PREFIX }}-${{ github.sha }}-
            ${{ env.DATA_CACHE_PREFIX }}-
 

      

      - name: Run sync Garmin CN to Garmin script
        if: env.RUN_TYPE == 'garmin_sync_cn_global'
        run: |
          # make garimin secret string `python run_page/garmin_sync_cn_global.py ${email} ${password} --is-cn
          python run_page/garmin_sync_cn_global.py ${{ secrets.GARMIN_SECRET_STRING_CN }} ${{ secrets.GARMIN_SECRET_STRING }}
        # If you only want to sync `type running` add args --only-run, default script is to sync all data (rides and runs).
        # python run_page/garmin_sync_cn_global.py ${{ secrets.GARMIN_SECRET_STRING_CN }} ${{ secrets.GARMIN_SECRET_STRING }}  --only-run


    
      - name: Run sync Garmin-cn to Strava(Run with Garmin data backup in Strava)
        if: env.RUN_TYPE == 'garmin_to_strava_cn'
        run: |
          python run_page/garmin_to_strava_sync.py ${{ secrets.STRAVA_CLIENT_ID }} ${{ secrets.STRAVA_CLIENT_SECRET }} ${{ secrets.STRAVA_CLIENT_REFRESH_TOKEN }}  ${{ secrets.GARMIN_SECRET_STRING_CN }}  --is-cn

     
